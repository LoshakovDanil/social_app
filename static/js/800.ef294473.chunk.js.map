{"version":3,"file":"static/js/800.ef294473.chunk.js","mappings":"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","sources":["webpack://react_app/./src/components/common/Paginator/Paginator.module.css?6caa","components/common/Paginator/Paginator.tsx","components/Users/UsersSearchForm.tsx","webpack://react_app/./src/components/Users/Users.module.css?b9d0","components/Users/User.tsx","components/Users/Users.tsx","components/Users/UsersPage.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"selected\":\"Paginator_selected__AxcpR\"};","import { useEffect, useState } from 'react'\n\nimport { Button } from '../Button/Button'\n\nimport s from './Paginator.module.css'\n\ntype Props = {\n  totalUsersCount: number\n  pageSize: number\n  currentPage: number\n  portionSize?: number\n  onPageChanged: (page: number) => void\n}\n\nconst Paginator: React.FC<Props> = ({ totalUsersCount, pageSize, currentPage, onPageChanged, portionSize = 10 }) => {\n  const totalUsersPages = Math.ceil(totalUsersCount / pageSize)\n  const pages = Array.from({ length: totalUsersPages }, (_, index) => index + 1)\n\n  const [currentPortion, setCurrentPortion] = useState(1)\n  const leftBorderPortion = (currentPortion - 1) * portionSize + 1\n  const rightBorderPortion = currentPortion * portionSize\n\n  useEffect(() => {\n    setCurrentPortion(Math.ceil(currentPage / portionSize))\n  }, [currentPage, portionSize])\n\n  const portionPages = pages.slice(leftBorderPortion - 1, rightBorderPortion)\n\n  return (\n    <div>\n      {leftBorderPortion > 1 && (\n        <Button\n          onClick={() => {\n            setCurrentPortion(currentPortion - 1)\n          }}\n        >\n          Prev\n        </Button>\n      )}\n      {portionPages.map(p => {\n        return (\n          <span\n            style={{ padding: 2 }}\n            key={p}\n            onClick={() => {\n              onPageChanged(p)\n            }}\n            className={p === currentPage ? s.selected : undefined}\n          >\n            {p}\n          </span>\n        )\n      })}\n      {rightBorderPortion < totalUsersPages && (\n        <Button\n          onClick={() => {\n            setCurrentPortion(currentPortion + 1)\n          }}\n        >\n          Next\n        </Button>\n      )}\n    </div>\n  )\n}\n\nexport default Paginator\n","import React, { FC } from 'react'\nimport { Field, Formik } from 'formik'\nimport { Form } from 'formik'\n\nimport { useAppDispatch, useAppSelector } from '../../hook/hook'\nimport { Button } from '../common/Button/Button'\nimport { Filter, getUsers } from '../../redux-toolkit/usersSlice'\n\nexport const UsersSearchForm: FC = () => {\n  const filter = useAppSelector(state => state.users.filter)\n  const pageSize = useAppSelector(state => state.users.pageSize)\n  const dispatch = useAppDispatch()\n\n  const onFilterChanged = (filter: Filter) => {\n    dispatch(getUsers({ currentPage: 1, pageSize, filter }))\n  }\n\n  const submit = (values: Filter, { setSubmitting }: { setSubmitting: (isSubmitting: boolean) => void }) => {\n    onFilterChanged(values)\n    setSubmitting(false)\n  }\n\n  return (\n    <div>\n      <Formik enableReinitialize initialValues={{ term: filter.term, friend: String(filter.friend) }} onSubmit={submit}>\n        {({ isSubmitting }) => (\n          <Form>\n            <Field type=\"text\" name=\"term\" />\n            <Field as=\"select\" name=\"friend\">\n              <option value=\"\">All</option>\n              <option value=\"true\">Followed</option>\n              <option value=\"false\">Not Followed</option>\n            </Field>\n            <Button type=\"submit\" disabled={isSubmitting}>\n              Submit\n            </Button>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  )\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Users_container__ucqbF\",\"message_body\":\"Users_message_body__OAvQt\",\"image\":\"Users_image__LuIQN\",\"name\":\"Users_name__85yu-\",\"selected\":\"Users_selected__HfMCg\",\"cursorMenu\":\"Users_cursorMenu__RZMHG\"};","import { FC } from 'react'\nimport { NavLink } from 'react-router-dom'\n\nimport { useAppDispatch, useAppSelector } from '../../hook/hook'\nimport { follow, unfollow } from '../../redux-toolkit/usersSlice'\nimport { Users } from '../../types/types'\nimport { Button } from '../common/Button/Button'\nimport { path } from '../../constants/pages'\n\nimport smile from '../../assets/images/Smiley.jpg'\n\nimport s from './Users.module.css'\n\nexport const User: FC = () => {\n  const isFollowing = useAppSelector(state => state.users.isFollowing)\n  const users = useAppSelector(state => state.users.users)\n\n  const dispatch = useAppDispatch()\n\n  const followFc = (id: number) => {\n    dispatch(follow(id))\n  }\n  const unfollowFc = (id: number) => {\n    dispatch(unfollow(id))\n  }\n\n  return (\n    <div>\n      {users.map((u: Users, index: number) => (\n        <div key={index} className={s.container}>\n          <div className={s.image}>\n            <NavLink to={'/' + path.profile + '/' + u.id}>\n              <img src={u.photos.large || smile} alt={'smile face'} />\n            </NavLink>\n            <div>\n              {u.followed ? (\n                <Button disabled={isFollowing.includes(u.id)} onClick={() => unfollowFc(u.id)}>\n                  UNFOLLOW\n                </Button>\n              ) : (\n                <Button disabled={isFollowing.includes(u.id)} onClick={() => followFc(u.id)}>\n                  FOLLOW\n                </Button>\n              )}\n            </div>\n          </div>\n          <div className={s.message_body}>\n            <div className={s.name}>{u.name}</div>\n            <div className={s.message}>{u.status}</div>\n          </div>\n        </div>\n      ))}\n    </div>\n  )\n}\n","import { useSearchParams } from 'react-router-dom'\nimport { FC, useEffect } from 'react'\n\nimport { useAppDispatch, useAppSelector } from '../../hook/hook'\nimport { getUsers } from '../../redux-toolkit/usersSlice'\nimport Paginator from '../common/Paginator/Paginator'\n\nimport { UsersSearchForm } from './UsersSearchForm'\nimport { User } from './User'\n\nimport s from './Users.module.css'\n\nexport const Users: FC = () => {\n  const currentPage = useAppSelector(state => state.users.currentPage)\n  const pageSize = useAppSelector(state => state.users.pageSize)\n  const filter = useAppSelector(state => state.users.filter)\n  const totalUsersCount = useAppSelector(state => state.users.totalUsersCount)\n\n  const dispatch = useAppDispatch()\n\n  const [searchParams, setSearchParams] = useSearchParams()\n  const parsed = Object.fromEntries(searchParams)\n\n  useEffect(() => {\n    let actualPage = currentPage\n    let actualFilter = filter\n\n    if (parsed.page) actualPage = +parsed.page\n    if (parsed.term) actualFilter = { ...actualFilter, term: parsed.term }\n    switch (parsed.friend) {\n      case 'null':\n        actualFilter = { ...actualFilter, friend: null }\n        break\n      case 'true':\n        actualFilter = { ...actualFilter, friend: true }\n        break\n      case 'false':\n        actualFilter = { ...actualFilter, friend: false }\n        break\n    }\n    dispatch(getUsers({ currentPage: actualPage, pageSize, filter: actualFilter }))\n  }, [])\n\n  useEffect(() => {\n    const term = filter.term\n    const friend = filter.friend\n\n    const urlQuery =\n      (term ? `&term=${term}` : '') +\n      (friend !== null && friend !== 'null' && friend !== '' ? `&friend=${friend}` : '') +\n      (currentPage !== 1 ? `&page=${currentPage}` : '')\n\n    setSearchParams(urlQuery)\n  }, [filter, currentPage])\n\n  const onPageChanged = (currentPage: number) => {\n    dispatch(getUsers({ currentPage, pageSize, filter }))\n  }\n\n  return (\n    <div>\n      <UsersSearchForm />\n      <div className={s.cursorMenu}>\n        <Paginator\n          totalUsersCount={totalUsersCount}\n          pageSize={pageSize}\n          currentPage={currentPage}\n          onPageChanged={onPageChanged}\n        />\n      </div>\n      <User />\n    </div>\n  )\n}\n","import { FC } from 'react'\n\nimport { useAppSelector } from '../../hook/hook'\nimport { Preloader } from '../common/Paginator/Preloader'\n\nimport { Users } from './Users'\n\nconst UsersPage: FC = () => {\n  const isFetching = useAppSelector(state => state.users.isFetching)\n  return (\n    <div>\n      {isFetching ? <Preloader /> : null}\n      <Users />\n    </div>\n  )\n}\n\nexport default UsersPage\n"],"names":["totalUsersCount","pageSize","currentPage","onPageChanged","portionSize","totalUsersPages","Math","ceil","pages","Array","from","length","_","index","useState","currentPortion","setCurrentPortion","leftBorderPortion","rightBorderPortion","useEffect","portionPages","slice","Button","onClick","map","p","style","padding","className","s","undefined","UsersSearchForm","filter","useAppSelector","state","users","dispatch","useAppDispatch","enableReinitialize","initialValues","term","friend","String","onSubmit","values","setSubmitting","getUsers","onFilterChanged","isSubmitting","type","name","as","value","disabled","User","isFollowing","u","to","path","id","src","photos","large","smile","alt","followed","includes","unfollow","follow","status","Users","useSearchParams","searchParams","setSearchParams","parsed","Object","fromEntries","actualPage","actualFilter","page","urlQuery","isFetching","Preloader"],"sourceRoot":""}